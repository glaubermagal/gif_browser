import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useEffect, useState } from "react";
import gifs from "../helpers/api/gifs";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [query, setQuery] = useState<string>('');
  const [gifList, setGifList] = useState<any[]>([]);
  const [page, setPage] = useState<number>(1);
  const itemsPerPage = 10;

  const handleSearch = async (e: React.FormEvent) => {
    e.preventDefault();

    
  };

  useEffect(() => {
    const executeSearch = async () => {
      const gifResults = await gifs.search({ 
        q: query,
        offset: (page - 1) * itemsPerPage, 
        limit: itemsPerPage
      });
  
      setGifList(gifResults?.data);
    }

    executeSearch();
  }, [query, page])

  const handlePageChange = (newPage: number) => {
    setPage(newPage);
  };

  return (
    <>
      <Head>
        <title>GIF Browser</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div className={styles.description}>
          <p>
            Gif Browser
          </p>
        </div>

        <div style={{
          display: 'flex',
          flexDirection: 'column',
          justifyContent: 'center',
          alignItems: 'center',
          width: '100%',
        }}>
          <h1>Search for GIFs</h1>

          <form onSubmit={handleSearch}>
            <input
              type="text"
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              placeholder="Enter your search query"
            />
            <button type="submit">Search</button>
          </form>

          {gifList?.length > 0 && (
            <div>
              <div>
                {gifList.map((gif) => (
                  <img key={gif.id} src={gif.images.original.url} />
                ))}
              </div>

              <div style={{
                width: '100%',
                display: 'flex',
                justifyContent: 'center',
                alignItems: 'center',
              }}>
                <button disabled={page === 1} onClick={() => handlePageChange(page - 1)}>
                  Previous
                </button>
                <span>Page {page}</span>
                <button onClick={() => handlePageChange(page + 1)}>
                  Next
                </button>
              </div>
            </div>
          )}
        </div>

        <div className={styles.grid}>
          
        </div>
      </main>
    </>
  );
}
